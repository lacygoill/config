#!/bin/bash

function did_wait_enough { #{{{1
# Adapted from the `check_stamp()` function in this script:
#
#     /usr/lib/apt/apt.systemd.daily

  local timestamp_file
  timestamp_file="$(get_timestamp_file)"
  # If the timestamp file doesn't exist yet,  create one, and assume we did wait
  # enough.
  if ! [[ -f "$timestamp_file" ]]; then
    update_timestamp_file
    return 0
  fi

  # compute  how much  time  has elapsed  since last  time  we `touch(1)`ed  the
  # timestamp file
  local -i now last elapsed
  now="$(date --date="$(date +'%Y-%m-%d')" +'%s')"
  if [[ -f "$timestamp_file" ]]; then
    last="$(date --date="$(date --reference="$timestamp_file" +'%Y-%m-%d')" +'%s')"
  fi
  (( elapsed = now - last ))

  # compute how much time we should wait
  local -i min_days="$1"
  local -i waiting_time="$((min_days * 24 * 60 * 60))"

  # we didn't wait enough
  if (( elapsed < waiting_time )); then
    return 1
  fi

  # we did wait enough
  return 0
}

function update_timestamp_file { #{{{1
  touch -- "$(get_timestamp_file)"
}

function get_timestamp_file { #{{{1
  local calling_script="${BASH_SOURCE[2]##*/}"
  local timestamp_file="$HOME/.cache/timestamps/$calling_script"
  echo "$timestamp_file"
}
