#!/bin/bash

# If some feature fails to be compiled, check out `src/auto/config.log`.{{{
#
# For example, that's how you can find the `libxt-dev` dependency package.
# Without, you don't have the GUI (nor the clipboard and some other features).
# In that case, if  you look at the output of the  `configure` script, the first
# interesting line matching the pattern `\.\.\. no$` is:
#
#     checking if X11 header files can be found... no
#
# And the first interesting line matching `\<support\>` comes right afterward:
#
#     checking --enable-gui argument... no GUI support
#
# These lines – and much more – are logged in `src/auto/config.log`.
# In that log file, an error is given a little before:
#
#     conftest.c:37:10: fatal error: X11/Intrinsic.h: No such file or directory
#                                    ^-------------^
#
# That missing file is the reason you need to install the `libxt-dev` package:
#
#     $ apt-file search X11/Intrinsic.h
#     libxt-dev: /usr/include/X11/Intrinsic.h
#     ^-------^
#}}}

readonly PREFIX="$HOME/.local/"

# `libcanberra-*`:  `+sound`
# `libgtk-3-dev`, `libxt-dev`:  GTK3 GUI, `+clientserver`, `+clipboard`, `+dnd`, `+mouseshape`
# `python3-dev`:  `+python3`
readonly -a DEPENDENCIES=(
  'libcanberra-dev'
  'libcanberra-pulse'
  'libgtk-3-dev'
  'libncurses-dev'
  'libxt-dev'
  'python3-dev'
)

source "${0%/*}/_lib"
extract_archive 'vim' 'https://github.com/vim/vim/tags'
install_dependencies "${DEPENDENCIES[@]}"

# Don't use `--with-python3-config-dir`;  it's deprecated.{{{
#
# Check out `./configure --help`.
#}}}
# Those options are not necessary, because they're set by default:{{{
#
#     --enable-cscope
#     --enable-multibyte
#     --enable-terminal
#     --with-features=huge
#
# Check out `$ ./configure --help`.
#}}}
# To enable the Lua interface, you need some configuration options and Debian packages.{{{
#
# Options:
#
#    - `--enable-luainterp=dynamic`
#    - `--with-luajit`
#
# `--with-luajit` doesn't make `--enable-luainterp` useless.
#
# Without `--enable-luainterp`, the lua interface is not enabled.
# You can check it's working with:
#
#     :lua print(_VERSION)
#
# And that LuaJIT is available with:
#
#     :lua print(jit.version)
#
# See `:help :lua /luajit`.
#
# ---
#
# Packages:
#
#    - `dpkg-dev`
#    - `libluajit-5.1-dev`
#    - `luajit`
#
# Without `dpkg-dev`, the compilation would fail because of:
# `--enable-luainterp=dynamic --enable-fail-if-missing`
#
# The `configure` script would try to run this command:
#
#     $ dpkg-architecture -qDEB_HOST_MULTIARCH 2> /dev/null
#
# And  `dpkg-architecture(1)`  is  provided  by  `dpkg-dev`.  `configure`  needs
# the   command  to   succeed  in   order  to   later  find   `liblua5.1.so`  in
# `/usr/lib/x86_64-linux-gnu/`.  Otherwise, it only looks in `/usr/lib{,64}`.
#
# `libluajit-5.1-dev` and `luajit` are necessary for `--with-luajit`.
#}}}
#   Why don't you enable it?{{{
#
# I  don't   want  to  lose  time   debugging  a  failing  compilation   for  an
# interface  that   we  never  use.    For  example,  patch  9.0.1719   broke  a
# compilation  enabling the  Lua interface;  it was  fixed in  a subsequent  PR:
# https://github.com/vim/vim/pull/12811, but the point still stands.
#}}}
if ! { ./configure                     \
      --enable-fail-if-missing         \
      --enable-gui=gtk3                \
      --enable-python3interp=dynamic   \
      --prefix="$PREFIX"               \
    && make                            \
    && make install               \
    && set_app_as_mimetype_handler 'gvim' ;}; then
  exit 1
fi

# Vim can be invoked with any of these commands.
readonly -a NAMES=(
  'editor'
  'eview'
  'evim'
  'ex'
  'gview'
  'gvim'
  'gvimdiff'
  'rgview'
  'rgvim'
  'rview'
  'rvim'
  'vi'
  'view'
  'vimdiff'
)
for name in "${NAMES[@]}"; do
  ln --symbolic --force "$HOME/.local/bin/vim" "$HOME/.local/bin/$name"
done
