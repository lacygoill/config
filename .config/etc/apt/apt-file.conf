// Purpose: de-couple `$ apt update` from `$ apt-file update`.
// For more info:{{{
//
//    - `/usr/share/doc/apt-file/README.md.gz`
//    - `/usr/share/doc/apt-file/examples/apt-file-2-update.sh`
//    - `/usr/share/doc/apt-file/examples/apt-file.conf`
//    - https://salsa.debian.org/apt-team/apt/-/blob/main/doc/acquire-additional-files.md
//
// The `.sh` script can also be executed like this:
//
//     $ sudo /usr/share/doc/apt-file/examples/apt-file-2-update.sh --install
//
// But it's better to instead study its code then write your own:
//
//     echo "Please review /etc/apt/apt-file.conf.  In particular,"
//     echo "please note the caveats listed in that file"
//}}}
// If the code stops working:{{{
//
// Consider removing the `apt-file` package.
// Instead, try to run it inside a Podman container.
// Also, pin the package so that it can't be pulled in as a dependency.
//
// Note that – in Debian – `command-not-found` depends on `apt-file`.
// If you remove the former, you can no longer use the latter.
//}}}

// make `$ apt-file update` download `Contents-*` files in `/var/lib/apt-file/lists/`
// instead of `/var/lib/apt/lists/`
Dir::State "var/lib/apt-file/";

// If `apt-file(1)` is  installed, `/etc/apt/apt.conf.d/50apt-file.conf` enables
// a few  "targets", which causes  `$ apt update` to download  huge `Contents-*`
// files, which in turn can make updates take too much time.
//
// To fix  this, we  disable those targets  in `/etc/apt/apt.conf.d/99zz-local`.
// And  here,   we  re-enable   some  of   them.   Only   `apt-file(1)`  sources
// `apt-file.conf`, so that should not affect `$ apt update`.
Acquire::IndexTargets {
    // We only re-enable 2 of them: `Contents-deb` and `Contents-deb-legacy`.{{{
    //
    // Those names are arbitrarily chosen and defined in `50apt-file.conf`.
    //
    // In  the   Ubuntu  archive,  the   `Contents-*`  files  are   right  below
    // `dists/codename`: http://archive.ubuntu.com/ubuntu/dists/focal
    //
    // In  that  case,  we  need `Contents-deb-legacy`,  because  the  `MetaKey`
    // identifier matches the  relative location of the  `Contents-*` files from
    // the `Release` file:
    //
    //     MetaKey "Contents-$(ARCHITECTURE)";
    //
    // ---
    //
    // OTOH,  in the  Debian  repository,  the `Contents-*`  files  are below  a
    // component:
    //
    //     dists/codename/main
    //                    ^--^
    //
    // http://ftp.debian.org/debian/dists/stable/main/
    // https://wiki.debian.org/DebianRepository/Format#A.22Contents.22_indices
    //
    // In that case, we need `Contents-deb`:
    //
    //     MetaKey "$(COMPONENT)/Contents-$(ARCHITECTURE)";
    //                ^-------^
    //}}}
    deb::Contents-deb::DefaultEnabled "true";
    deb::Contents-deb-legacy::DefaultEnabled "true";
};
